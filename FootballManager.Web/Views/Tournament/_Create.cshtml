@using FootballManager.Web.Common
@model TournamentViewModel

@*@using (Ajax.BeginForm("Create", "Tournament", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "onSuccessModal",
    OnFailure = "onFailureModal"
}))*@
@using (Html.BeginForm())
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Create Tournament</h4>
    </div>
    <div class="modal-body">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.TournamentName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TournamentName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TournamentName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TournamentType, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EnumDropDownListFor(model => model.TournamentType, Constants.TEXT_SELECT, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TournamentType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    <div class="input-group date year-picker">
                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Year, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    <div class="input-group date datetime-picker">
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.FromDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    <div class="input-group date dtpicker">
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.ToDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HostCountryId, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.HostCountryId, ViewBag.CountryList as SelectList, Constants.TEXT_SELECT, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HostCountryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TournamentStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EnumDropDownListFor(model => model.TournamentStatus, Constants.TEXT_SELECT, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TournamentStatus, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
    </div>
}
       


